name: Elixir Build and Cache Dependencies
inputs:
  elixir-version:
    required: true
    type: string
  erlang-version:
    required: true
    type: string
  cache-key-version:
    description: 'Optionally specify a version for the cache.'
    required: false
    type: string
  mix-env:
    required: true
    type: string
  # using a string because booleans currently converted to strings
  # within workflow dispatches and composite actions
  # https://github.com/actions/runner/issues/1483
  skip-checkout:
    description: 'Optionally skip performing the code checkout.'
    required: false
    default: 'false'
    type: string
  github-repository:
    description: 'Optionally specify the repo (format: <organization/repository>) against which to authenticate. Must be included if the `github-token` option is used.'
    required: false
    default: 'false'
    type: string
  github-token:
    description: 'Optionally rewrite all GitHub URLs to authenticate with a personal access token.'
    required: false
    default: 'false'
    type: string
outputs:
  cache-key:
    value: ${{ steps.compute-cache-key.outputs.cache-key }}
  cache-key-suffix:
    value: ${{ steps.compute-cache-key.outputs.cache-key-suffix }}
runs:
  using: composite
  steps:
    - name: Optionally check out code
      if: inputs.skip-checkout == 'false'
      uses: actions/checkout@v3
    - uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ inputs.elixir-version }}
        otp-version: ${{ inputs.erlang-version }}
    - name: Format Cache Version
      id: format-cache-version
      if: ${{ inputs.cache-key-version }}
      run: echo "cache-key-version=_${{ inputs.cache-key-version }}" >> $GITHUB_OUTPUT
      shell: bash
    - name: Compute Cache Key
      id: compute-cache-key
      run: |
        elixir="elixir-${{ inputs.elixir-version }}"
        erlang="erlang-${{ inputs.erlang-version }}"
        mix_env="${{ inputs.mix-env }}"
        runner="${{ runner.os }}"
        version="${{ steps.format-cache-version.outputs.cache-key-version }}"
        suffix="${runner}_${erlang}_${elixir}_${mix_env}_${{ hashFiles('mix.lock') }}${version}"
        result="cache-deps_${suffix}"
        echo "cache-key=$result" >> $GITHUB_OUTPUT
        echo "cache-key-suffix=$suffix" >> $GITHUB_OUTPUT
      shell: bash
    - name: Configure Git Client with GitHub Auth Token
      shell: bash
      if: inputs.github-token != 'false'
      run: |
        GITHUB_URL="https://${ACTOR}:${TOKEN}@github.com/"
        git remote set-url origin "${GITHUB_URL}${OWNER_AND_REPOSITORY}"
        git config --global url.${GITHUB_URL}.insteadOf git@github.com:
        git config --global user.email "idg.dx.bot.workflow@rentpath.com"
        git config --global user.name "rentpath-workflow-bot"
        git config --global http.http.https://github.com/.extraheader "AUTHORIZATION: bearer ${DEPLOY_TOKEN}"
      env:
        ACTOR: rentpath-workflow-bot
        TOKEN: ${{ inputs.github_token }}
        OWNER_AND_REPOSITORY: ${{ inputs.github_repository }}

    - id: cache-dependencies
      uses: actions/cache@v3
      with:
        key: ${{ steps.compute-cache-key.outputs.cache-key }}
        path: |
          deps
          _build
    - name: Compile Dependencies
      env:
        MIX_ENV: ${{ inputs.mix-env }}
      if: steps.cache-dependencies.outputs.cache-hit == false
      run: mix do deps.get, deps.compile --skip-umbrella-children
      shell: bash
